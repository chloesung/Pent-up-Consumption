# -*- coding: utf-8 -*-
"""보복소비_Modeling

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TJ3v5zz2SodyZR-bukf37w57rsjMHr2w

### 구글 드라이브 마운트
"""

from google.colab import drive 
drive.mount('/content/gdrive/')

"""# 0. Import"""

# 폰트 설치용
!sudo apt-get install -y fonts-nanum
!sudo fc-cache -fv
!rm ~/.cache/matplotlib -rf

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
plt.rc('font', family='NanumBarunGothic') 
from matplotlib.colors import rgb2hex
from matplotlib.colors import ListedColormap
import matplotlib
get_ipython().run_line_magic('config', "InlineBackend.figure_format='retina' #화질 좋게 해주기")
import missingno

from sklearn.metrics import mean_absolute_error

from lightgbm import LGBMRegressor
from sklearn.model_selection import KFold

"""# 1. Data Preprocessing

## 1) Train Data set 구축
"""

df1 = pd.read_excel('/content/gdrive/Shareddrives/2021 진리장학금/data_대회/consumption_US.xlsx')
df2 = pd.read_excel('/content/gdrive/Shareddrives/2021 진리장학금/data_대회/CPI_US.xlsx')
df3 = pd.read_excel('/content/gdrive/Shareddrives/2021 진리장학금/data_대회/GDP_US.xlsx')
df4 = pd.read_excel('/content/gdrive/Shareddrives/2021 진리장학금/data_대회/ffr.xlsx')

# df1-4 모두 합치기
from functools import reduce
dfs = [df1,df2,df3,df4]
df = reduce(lambda left, right: pd.merge(left, right, on='observation_date', how='outer'), dfs)

col = ['월','최종소비','내구재','비내구재','서비스','소비자물가지수','GDP','단기이자율_3개월'] # 컬럼명 변경
df.columns = col
df = df.set_index('월')
df = df.reset_index()

# 실수 type으로 변환
for i in col[1:]:
  df[i] = df[i].astype(float)

# 전년 대비 동분기 로그차분 변화율 변수 생성
df['최종소비_소비변화율'] = (np.log(df['최종소비']) - np.log(df['최종소비']).shift(4))*100
df['내구재_소비변화율'] = (np.log(df['내구재']) - np.log(df['내구재']).shift(4))*100
df['비내구재_소비변화율'] = (np.log(df['비내구재']) - np.log(df['비내구재']).shift(4))*100
df['서비스_소비변화율'] = (np.log(df['서비스']) - np.log(df['서비스']).shift(4))*100

"""## 2) EDA

### 결측치 확인
"""

missingno.matrix(df)

"""### 평균 제거해주기"""

# 변화율 변수만 뽑기
target_col = ['내구재_소비변화율','비내구재_소비변화율','서비스_소비변화율','최종소비_소비변화율']
df_1 = df[target_col]

# 평균 제거
df_1 = df_1 - df_1.mean()

# 평균 제거한 데이터로 합치기
df_target = df_1
df = pd.concat([df.drop(target_col, axis=1), df_target], axis=1)

# 소비변화율 추이
plt.rcParams['figure.figsize'] = [12, 4]
plt.plot(df.loc[:, '월'], df.loc[:, '내구재_소비변화율'], label='내구재_소비변화율')
plt.plot(df.loc[:, '월'], df.loc[:, '비내구재_소비변화율'], label='비내구재_소비변화율')
plt.plot(df.loc[:, '월'], df.loc[:, '서비스_소비변화율'], label='서비스_소비변화율')
plt.plot(df.loc[:, '월'], df.loc[:, '최종소비_소비변화율'], label='최종소비_소비변화율')
plt.legend()
plt.show()

"""# 3. Modeling

## 1) 최종소비

### Train, Test set 분리
"""

train = df[:47]
test = df[48:].drop(['월','내구재_소비변화율','비내구재_소비변화율','서비스_소비변화율','최종소비_소비변화율'], axis=1)

train_x = train.drop(['월','내구재_소비변화율','비내구재_소비변화율','서비스_소비변화율','최종소비_소비변화율'], axis=1)
train_y = train[['최종소비_소비변화율']]

# KFold 기법 
cross=KFold(n_splits=5, shuffle=True, random_state=42)
folds=[]
for train_idx, valid_idx in cross.split(train_x, train_y):
    folds.append((train_idx, valid_idx))

"""### Model 훈련"""

models={}
for fold in range(5):
    print(f'===================={fold+1}=======================')
    train_idx, valid_idx=folds[fold]
    X_train=train_x.iloc[train_idx, :]
    y_train=train_y.iloc[train_idx, :]
    X_valid=train_x.iloc[valid_idx, :]
    y_valid=train_y.iloc[valid_idx, :]
    
    model=LGBMRegressor(n_estimators=100)
    model.fit(X_train, y_train, eval_set=[(X_train, y_train), (X_valid, y_valid)], 
             early_stopping_rounds=30, verbose=100)
    models[fold]=model
    
    print(f'================================================\n\n')

"""### 예측값"""

# 예측값 생성
predict = 0
for i in range(5):
    predict += models[i].predict(test)/5

# 날짜 인덱스 생성
date = [np.datetime64('2020-01-01'), np.datetime64('2020-04-01'), np.datetime64('2020-07-01'), 
        np.datetime64('2020-10-01'), np.datetime64('2021-01-01'), np.datetime64('2021-04-01')]

# 데이터프레임으로 합치기
predict_data = pd.DataFrame({'월':date, '최종소비_예측변화율':predict})

# 시각화용 데이터프레임 생성
df2 = df[['월','최종소비_소비변화율']]
df2 = pd.merge(df2, predict_data, on='월', how='outer')
df2['최종소비_예측변화율'][47] = df2['최종소비_소비변화율'][47].copy()

# 가계소비, 예측소비 추이
plt.rcParams['figure.figsize'] = [8, 6]
df3 = df2[40:]
df3['시기']= ['18.I','18.II','18.III','18.IV','19.I','19.II','19.III','19.IV','20.I','20.II','20.III','20.IV','21.I','21.II']
plt.plot(df3.loc[:, '시기'], df3.loc[:, '최종소비_예측변화율'], label='소비증가율 예측값',color='red')
plt.plot(df3.loc[:, '시기'], df3.loc[:, '최종소비_소비변화율'], label='최종소비 소비증가율',color='blue')
plt.legend(fontsize=15)
plt.xlabel('Year.Quarter',fontsize=12)
plt.ylabel('Consumption Growth (%)',fontsize=12)
plt.ylim([-15,15])
plt.show()

final2 = df2

"""## 2) 내구재 소비

### Train, Test set 분리
"""

train = df[:47]
test = df[48:].drop(['월','내구재_소비변화율','비내구재_소비변화율','서비스_소비변화율','최종소비_소비변화율'], axis=1)

train_x = train.drop(['월','내구재_소비변화율','비내구재_소비변화율','서비스_소비변화율','최종소비_소비변화율'], axis=1)
train_y = train[['내구재_소비변화율']]

# KFold 기법 
cross=KFold(n_splits=5, shuffle=True, random_state=42)
folds=[]
for train_idx, valid_idx in cross.split(train_x, train_y):
    folds.append((train_idx, valid_idx))

"""### Model 훈련"""

models={}
for fold in range(5):
    print(f'===================={fold+1}=======================')
    train_idx, valid_idx=folds[fold]
    X_train=train_x.iloc[train_idx, :]
    y_train=train_y.iloc[train_idx, :]
    X_valid=train_x.iloc[valid_idx, :]
    y_valid=train_y.iloc[valid_idx, :]
    
    model=LGBMRegressor(n_estimators=100)
    model.fit(X_train, y_train, eval_set=[(X_train, y_train), (X_valid, y_valid)], 
             early_stopping_rounds=30, verbose=100)
    models[fold]=model
    
    print(f'================================================\n\n')

"""### 예측값"""

# 예측값 생성
predict = 0
for i in range(5):
    predict += models[i].predict(test)/5

# 날짜 인덱스 생성
date = [np.datetime64('2020-01-01'), np.datetime64('2020-04-01'), np.datetime64('2020-07-01'), 
        np.datetime64('2020-10-01'), np.datetime64('2021-01-01'), np.datetime64('2021-04-01')]

# 데이터프레임으로 합치기
predict_data = pd.DataFrame({'월':date, '내구재_예측변화율':predict})

# 시각화용 데이터프레임 생성
df2 = df[['월','내구재_소비변화율']]
df2 = pd.merge(df2, predict_data, on='월', how='outer')
df2['내구재_예측변화율'][47] = df2['내구재_소비변화율'][47].copy()

# 가계소비, 예측소비 추이
plt.rcParams['figure.figsize'] = [8, 6]
df3 = df2[40:]
df3['시기']= ['18.I','18.II','18.III','18.IV','19.I','19.II','19.III','19.IV','20.I','20.II','20.III','20.IV','21.I','21.II']
plt.plot(df3.loc[:, '시기'], df3.loc[:, '내구재_예측변화율'], label='소비증가율 예측값',color='red')
plt.plot(df3.loc[:, '시기'], df3.loc[:, '내구재_소비변화율'], label='내구재 소비증가율',color='blue')
plt.legend(fontsize=15)
plt.xlabel('Year.Quarter',fontsize=12)
plt.ylabel('Consumption Growth (%)',fontsize=12)
plt.ylim([-10,30])
plt.show()

us_data = pd.merge(final2, df2, on='월')

"""## 3) 비내구재 소비

### Train, Test set 분리
"""

train = df[:47]
test = df[48:].drop(['월','내구재_소비변화율','비내구재_소비변화율','서비스_소비변화율','최종소비_소비변화율'], axis=1)

train_x = train.drop(['월','내구재_소비변화율','비내구재_소비변화율','서비스_소비변화율','최종소비_소비변화율'], axis=1)
train_y = train[['비내구재_소비변화율']]

# KFold 기법 
cross=KFold(n_splits=5, shuffle=True, random_state=42)
folds=[]
for train_idx, valid_idx in cross.split(train_x, train_y):
    folds.append((train_idx, valid_idx))

"""### Model 훈련"""

models={}
for fold in range(5):
    print(f'===================={fold+1}=======================')
    train_idx, valid_idx=folds[fold]
    X_train=train_x.iloc[train_idx, :]
    y_train=train_y.iloc[train_idx, :]
    X_valid=train_x.iloc[valid_idx, :]
    y_valid=train_y.iloc[valid_idx, :]
    
    model=LGBMRegressor(n_estimators=100)
    model.fit(X_train, y_train, eval_set=[(X_train, y_train), (X_valid, y_valid)], 
             early_stopping_rounds=30, verbose=100)
    models[fold]=model
    
    print(f'================================================\n\n')

"""### 예측값"""

# 예측값 생성
predict = 0
for i in range(5):
    predict += models[i].predict(test)/5

# 날짜 인덱스 생성
date = [np.datetime64('2020-01-01'), np.datetime64('2020-04-01'), np.datetime64('2020-07-01'), 
        np.datetime64('2020-10-01'), np.datetime64('2021-01-01'), np.datetime64('2021-04-01')]

# 데이터프레임으로 합치기
predict_data = pd.DataFrame({'월':date, '비내구재_예측변화율':predict})

# 시각화용 데이터프레임 생성
df2 = df[['월','비내구재_소비변화율']]
df2 = pd.merge(df2, predict_data, on='월', how='outer')
df2['비내구재_예측변화율'][47] = df2['비내구재_소비변화율'][47].copy()

# 가계소비, 예측소비 추이
plt.rcParams['figure.figsize'] = [8, 6]
df3 = df2[40:]
df3['시기']= ['18.I','18.II','18.III','18.IV','19.I','19.II','19.III','19.IV','20.I','20.II','20.III','20.IV','21.I','21.II']
plt.plot(df3.loc[:, '시기'], df3.loc[:, '비내구재_예측변화율'], label='소비증가율 예측값',color='red')
plt.plot(df3.loc[:, '시기'], df3.loc[:, '비내구재_소비변화율'], label='비내구재 소비증가율',color='blue')
plt.legend(fontsize=15)
plt.xlabel('Year.Quarter',fontsize=12)
plt.ylabel('Consumption Growth (%)',fontsize=12)
plt.ylim([-5,15])
plt.show()

us_data = pd.merge(us_data, df2, on='월')

"""## 4) 서비스 소비

### Train, Test set 분리
"""

train = df[:47]
test = df[48:].drop(['월','내구재_소비변화율','비내구재_소비변화율','서비스_소비변화율','최종소비_소비변화율'], axis=1)

train_x = train.drop(['월','내구재_소비변화율','비내구재_소비변화율','서비스_소비변화율','최종소비_소비변화율'], axis=1)
train_y = train[['서비스_소비변화율']]

# KFold 기법 
cross=KFold(n_splits=5, shuffle=True, random_state=42)
folds=[]
for train_idx, valid_idx in cross.split(train_x, train_y):
    folds.append((train_idx, valid_idx))

"""### Model 훈련"""

models={}
for fold in range(5):
    print(f'===================={fold+1}=======================')
    train_idx, valid_idx=folds[fold]
    X_train=train_x.iloc[train_idx, :]
    y_train=train_y.iloc[train_idx, :]
    X_valid=train_x.iloc[valid_idx, :]
    y_valid=train_y.iloc[valid_idx, :]
    
    model=LGBMRegressor(n_estimators=100)
    model.fit(X_train, y_train, eval_set=[(X_train, y_train), (X_valid, y_valid)], 
             early_stopping_rounds=30, verbose=100)
    models[fold]=model
    
    print(f'================================================\n\n')

"""### 예측값"""

# 예측값 생성
predict = 0
for i in range(5):
    predict += models[i].predict(test)/5

# 날짜 인덱스 생성
date = [np.datetime64('2020-01-01'), np.datetime64('2020-04-01'), np.datetime64('2020-07-01'), 
        np.datetime64('2020-10-01'), np.datetime64('2021-01-01'), np.datetime64('2021-04-01')]

# 데이터프레임으로 합치기
predict_data = pd.DataFrame({'월':date, '서비스_예측변화율':predict})

# 시각화용 데이터프레임 생성
df2 = df[['월','서비스_소비변화율']]
df2 = pd.merge(df2, predict_data, on='월', how='outer')
df2['서비스_예측변화율'][47] = df2['서비스_소비변화율'][47].copy()

# 가계소비, 예측소비 추이
plt.rcParams['figure.figsize'] = [8, 6]
df3 = df2[40:]
df3['시기']= ['18.I','18.II','18.III','18.IV','19.I','19.II','19.III','19.IV','20.I','20.II','20.III','20.IV','21.I','21.II']
plt.plot(df3.loc[:, '시기'], df3.loc[:, '서비스_예측변화율'], label='소비증가율 예측값',color='red')
plt.plot(df3.loc[:, '시기'], df3.loc[:, '서비스_소비변화율'], label='서비스 소비증가율',color='blue')
plt.legend(fontsize=15)
plt.xlabel('Year.Quarter',fontsize=12)
plt.ylabel('Consumption Growth (%)',fontsize=12)
plt.ylim([-20,15])
plt.show()

us_data = pd.merge(us_data, df2, on='월')

us_data.to_csv('us_data.csv')